---

#- name: Tomcat image AMD64 arch
#  set_fact:
#    mysql_image: "mariadb:latest"
#  when: cluster_arch == 'amd64'
#
#- name: Tomcat image ARM64 arch
#  set_fact:
#    mysql_image: "mariadb:latest@sha256:c892a2d0194f19d0aa29fa165cdbfeb6be619cbf68b7a9f715369f7f08c05311"
#  when: cluster_arch == 'arm64'
#
#- name: Pull MySQL image
#  docker_image:
#    name: "{{ mysql_image }}"
#    source: pull

- name: Pull MariaDB image
  docker_image:
    name: "mariadb:latest"
    source: pull

- name: push mysql container image to local registry
  docker_image:
    name: "mariadb"
    tag: "latest"
    repository: "master:5000/mariadb:latest"
    push: true
    source: local


- name: Create MySQL RC
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: ReplicationController
      metadata:
        name: myweb-mysql
        namespace: myweb
      spec:
        replicas: 1
        selector:
            app: mysql
        template:
          metadata:
            labels:
              app: mysql
          spec:
            containers:
            - name: mysql
              imagePullPolicy: IfNotPresent
              image: master:5000/mariadb:latest
              ports:
              - containerPort: 3306
              resources:           #Recursos asignados al contenedor
                limits:
                  cpu: "0.3"   #CPU
                  memory: "0.8Gi"  #Memoria
              env:          #Variables de entorno para acceder a MySQL
              - name: MYSQL_ROOT_PASSWORD
                value: "{{ k8s_deploy_mysql_passwd }}"
              - name: MYSQL_DATABASE
                value: example_db
              - name: MYSQL_USER
                value: example_db_user
              - name: MYSQL_PASSWORD
                value: example_db_pass
              volumeMounts:
                - name: db-entry
                  mountPath: /docker-entrypoint-initdb.d
            volumes:
              - name: db-entry
                hostPath:
                  path: /mnt/nfs/kb_tomcat_mysql/db


- name: Create mysql service
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: mysql
        namespace: myweb
      spec:
        type: ClusterIP
        ports:
        - name: mysql-svc
          port: 3306
          targetPort: 3306
        selector:
          app: mysql


- name: Get mysql service details
  k8s_info:
    kind: Service
    name: mysql
    namespace: myweb
  register: svc

- name: Print the full svc variable
  debug: var=svc

