---
- name: Create directory for openssl certs
  file:
    path: "{{ deployment_dir }}/ssl/certs"
    state: directory
    mode: 0700

      # Certificado para Mattermost (pendiente para m√°s aplicaciones)
      
- name: Check if tls secret "tls-certificate" already exists
  shell: kubectl get secrets -n{{ app_name }} | grep tls-certificate
  delegate_to: master
  run_once: true
  register: check_tls_mm_secret
  ignore_errors: true

- name: Generate SSL key and certificate
  shell: |
    openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
      -keyout {{ deployment_dir }}/ssl/certs/nginx-selfsigned-mm.key \
      -out {{ deployment_dir }}/ssl/certs/nginx-selfsigned-mm.crt \
      -subj "/CN={{ app_name }}.{{ fqdn }}"
  when: check_tls_mm_secret is failed

- name: Create tls secret
  shell: kubectl create secret tls tls-certificate --key {{ deployment_dir }}/ssl/certs/nginx-selfsigned-mm.key --cert {{ deployment_dir }}/ssl/certs/nginx-selfsigned-mm.crt -n{{ app_name }}
  when: check_tls_mm_secret is failed

- name: Check if "tls-dhparam" secret already exists
  shell: kubectl get secrets -n{{ app_name }} | grep tls-dhparam
  delegate_to: master
  run_once: true
  register: check_dhparam_mm_secret
  ignore_errors: true

- name: Generate X bit dhparam.pem file (this may take a while)
  shell: openssl dhparam -out {{ deployment_dir }}/ssl/certs/dhparam-mm.pem 2048
  when: check_tls_mm_secret is failed

# Fixme
- name: Create tls-dhparam secret
  shell: kubectl create secret generic tls-dhparam --from-file="{{ deployment_dir }}/ssl/certs/dhparam-mm.pem" -n{{ app_name }}
  when: check_dhparam_mm_secret is failed

    #### Dashboard TLS conf

- name: Check if tls secret "tls-dashb-certificate" already exists
  shell: kubectl get secrets -nkube-system | grep tls-dashb-certificate
  delegate_to: master
  run_once: true
  register: check_tls_dashb_secret
  ignore_errors: true

- name: Generate SSL key and certificate
  shell: |
    openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
      -keyout {{ deployment_dir }}/ssl/certs/nginx-selfsigned-dashb.key \
      -out {{ deployment_dir }}/ssl/certs/nginx-selfsigned-dashb.crt \
      -subj "/CN=dashboard.k8s.ingress.{{ fqdn }}"
  when: check_tls_dashb_secret is failed

- name: Create tls secret dashb
  shell: kubectl create secret tls tls-dashb-certificate --key {{ deployment_dir }}/ssl/certs/nginx-selfsigned-dashb.key --cert {{ deployment_dir }}/ssl/certs/nginx-selfsigned-dashb.crt -nkube-system
  when: check_tls_dashb_secret is failed

- name: Check if "tls-dashb-dhparam" secret already exists
  shell: kubectl get secrets -nkube-system | grep tls-dashb-dhparam
  delegate_to: master
  run_once: true
  register: check_dhparam_dashb_secret
  ignore_errors: true

- name: Generate X bit dhparam.pem file (this may take a while)
  shell: openssl dhparam -out {{ deployment_dir }}/ssl/certs/dhparam_dashb.pem 2048
  when: check_tls_dashb_secret is failed

# Fixme
- name: Create tls-dhparam secret
  shell: kubectl create secret generic tls-dashb-dhparam --from-file="{{ deployment_dir }}/ssl/certs/dhparam_dashb.pem" -nkube-system
  when: check_dhparam_dashb_secret is failed

