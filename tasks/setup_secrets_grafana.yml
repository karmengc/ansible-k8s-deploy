---


#### Monitoring.grafana TLS conf (when app_name=monitoring.grafana)

- name: Check if tls secret "tls-grafana-certificate" already exists
  shell: kubectl get secrets -nmonitoring | grep tls-grafana-certificate
  delegate_to: master
  run_once: true
  register: check_tls_grafana_secret
  ignore_errors: true

- name: Generate SSL key and certificate
  shell: |
    openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
      -keyout {{ deployment_dir }}/ssl/certs/nginx-selfsigned-grafana.key \
      -out {{ deployment_dir }}/ssl/certs/nginx-selfsigned-grafana.crt \
      -subj "/CN=monitoring.grafana.ingress.{{ fqdn }}"
  when: check_tls_grafana_secret is failed

- name: Create tls secret grafana
  shell: kubectl create secret tls tls-grafana-certificate --key {{ deployment_dir }}/ssl/certs/nginx-selfsigned-grafana.key --cert {{ deployment_dir }}/ssl/certs/nginx-selfsigned-grafana.crt -nmonitoring
  when: check_tls_grafana_secret is failed

- name: Check if "tls-grafana-dhparam" secret already exists
  shell: kubectl get secrets -nmonitoring | grep tls-grafana-dhparam
  delegate_to: master
  run_once: true
  register: check_dhparam_grafana_secret
  ignore_errors: true

- name: Generate X bit dhparam.pem file (this may take a while)
  shell: openssl dhparam -out {{ deployment_dir }}/ssl/certs/dhparam_grafana.pem 2048
  when: check_tls_grafana_secret is failed

# Fixme
- name: Create tls-dhparam secret grafana
  shell: kubectl create secret generic tls-grafana-dhparam --from-file="{{ deployment_dir }}/ssl/certs/dhparam_grafana.pem" -nmonitoring
  when: check_dhparam_grafana_secret is failed

