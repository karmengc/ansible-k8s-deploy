---

- name: Pull Tomcat image
  docker_image:
    name: tomcat:8
    source: pull

- name: push tomcat container image to local registry
  docker_image:
    name: "tomcat"
    tag: "8"
    repository: "master:5000/tomcat:8"
    push: true
    source: local



- name: Create tomcat users configmap
  k8s:
    state: present
    definition:
      apiversion: v1
      kind: ConfigMap
      metadata:
        name: tomcat-users-config
        namespace: default
      data:
        tomcat-users.xml: |
          <?xml version="1.0" encoding="UTF-8"?>
          <tomcat-users xmlns="http://tomcat.apache.org/xml"
              xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xsi:schemaLocation="http://tomcat.apache.org/xml tomcat-users.xsd"
              version="1.0">
            <role rolename="admin"/>
            <user username="admin" password="admin1" roles="manager-gui,manager-status,manager-script,manager-jmx,admin"/>
          </tomcat-users>


- name: Create tomcat
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: ReplicationController
      metadata:
        name: myweb-tomcat
        namespace: default
      spec:
        replicas: 1
        selector:
          app: myweb
        template:
          metadata:
            labels:
              app: myweb
          spec:
            containers:
            - name: myweb
              imagePullPolicy: IfNotPresent
              image: master:5000/tomcat:8
              ports:
              - containerPort: 8080
              resources:           #Recursos asignados al contenedor
                limits:
                  cpu: "0.5"   #CPU
                  memory: "1Gi"  #Memoria
              env:          #Variables de entorno para conectar Tomcat con MySQL
                #              - name: MYSQL_SERVICE_HOST
                #                value: "mysql"
                #              - name: MYSQL_SERVICE_PORT
                #                value: "3306"
                - name: JDBC_URL
                  value: "jdbc:mysql://mysql:3306/example_db?connectTimeout=0&amp;socketTimeout=0&amp;autoReconnect=true"
                - name: JDBC_USER
                  value: "example_db_user"
                - name: JDBC_PASS
                  value: "example_db_pass"
              volumeMounts:
                - name: tomcat-webapps
                  mountPath: /usr/local/tomcat/webapps
                - name: tomcat-users-config
                  mountPath: /usr/local/tomcat/conf/tomcat-users.xml
                  subPath: tomcat-users.xml
            # Contenido del volumen: https://github.com/dmulligan/docker-example-tomcat-mysql/tree/master/tomcat adaptando context
            # en lugar de db hemos puesto mysql y funciona.
            volumes:
              - name: tomcat-webapps
                hostPath:
                  path: /mnt/nfs/kb_tomcat_mysql/tomcat/webapps
              - name: tomcat-users-config
                configMap:
                  name: tomcat-users-config
                  items:
                    - key: tomcat-users.xml
                      path: tomcat-users.xml


- name: Create tomcat service
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: myweb
        namespace: default
      spec:
        type: NodePort
        ports:
        - name: myweb-svc
          port: 8080
          targetPort: 8080
          nodePort: 30080 # Verdadero puerto del Nodo (debe ser entre 30000 y 32767)
        selector:
          app: myweb

#https://stackoverflow.com/questions/59484509/node-had-taints-that-the-pod-didnt-tolerate-error-when-deploying-to-kubernetes
- name: Prevent taint error when Molecule testing
  command: "kubectl taint nodes --all node-role.kubernetes.io/master-"
  when: provision_cluster_user == 'vagrant'
  ignore_errors: true

- name: Get tomcat service details
  k8s_info:
    kind: Service
    name: myweb
    namespace: default
  register: svc

- name: Print the full svc variable
  debug: var=svc

- name: Set the service NodePort as a variable
  set_fact:
    port: "{{ svc['resources'][0]['spec']['ports'][0]['nodePort'] }}"

      #Esto da error 404
      #- name: Test a request to the service
      #  uri:
      #    url: http://{{ master_ip }}:{{ port }}/

- name: Print the URL for Tomcat
  debug:
    msg: http://{{ master_ip }}:{{ port }}/

